name: Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
  workflow_dispatch:

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      MASTER_KEY: bifur_bofur_bombur
    strategy:
      fail-fast: false
      matrix:
        cfengine: [ "lucee@5", "adobe@2018", "adobe@2021" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@main

      - name: Setup Meilisearch connection
       working-directory: ./test-harness
       run: |
         # Setup .env
         touch .env
         # ENV
         printf "MEILISEARCH_HOST=localhost\n" >> .env
         printf "MEILISEARCH_PORT=7700\n" >> .env
         printf "MEILISEARCH_MASTER_KEY=$MASTER_KEY\n" >> .env

      - name: Setup Meilisearch
        run: |
          docker run -it --rm  -p 7700:7700 -e MEILI_MASTER_KEY='$MASTER_KEY' -v $(pwd)/meili_data:/meili_data getmeili/meilisearch
          meilisearch --env="development"

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v1
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'test-harness/box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'test-harness/box.json' ) }}

      - name: Install Test Harness Dependencies
        run: |
          box install
          cd test-harness && box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug
          # Install Adobe 2021 cfpm modules
          if [[ "${{ matrix.cfengine }}" == "adobe@2021" ]] ; then
            box run-script install:2021
          fi
          curl http://127.0.0.1:60277

      - name: Run Tests
        run: |
          mkdir -p test-harness/tests/results
          box testbox run --verbose outputFile=test-harness/tests/results/test-results outputFormats=json,antjunit

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-harness/tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results to Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.cfengine }}
          path: |
            test-harness/tests/results/**/*

      - name: Show Server Log On Failures
        if: ${{ failure() }}
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debug Logs To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            .engine/**/logs/*
            .engine/**/WEB-INF/cfusion/logs/*

      - name: Slack Notifications
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: '${{ github.repository }} tests failed :cry:'
          SLACK_TITLE: ${{ github.repository }} Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
